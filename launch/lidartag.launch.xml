<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (C) 2013-2025, The Regents of The University of Michigan.
 * All rights reserved.
 * This software was developed in the Biped Lab (https://www.biped.solutions/)
 * under the direction of Jessy Grizzle, grizzle@umich.edu. This software may
 * be available under alternative licensing terms; contact the address above.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * The views and conclusions contained in the software and documentation are those
 * of the authors and should not be interpreted as representing official policies,
 * either expressed or implied, of the Regents of The University of Michigan.
 *
 * AUTHOR: Bruce JK Huang (bjhuang[at]umich.edu)
 * WEBSITE: https://www.brucerobot.com/
-->

<launch>

  <arg name="pointcloud_topic" default="/pointcloud_raw" />
  <arg name="tag_size_list" default="[0.8]" />
  
  <arg name="lidar_model">
    <choice value="aeva_aeries2"/>
    <choice value="at128"/>
    <choice value="innoviz2"/>
    <choice value="ouster_os1_128"/>
    <choice value="ouster_os2"/>
    <choice value="pandar_40p"/>
    <choice value="pandar_64"/>
    <choice value="pandar_qt"/>
    <choice value="pandar_xt32"/>
    <choice value="robosense_m1"/>
    <choice value="seyond_falcon"/>
    <choice value="seyond_robin_w"/>
    <choice value="velodyne_vlp16"/>
    <choice value="velodyne_vls128"/>
    <choice value="ot128"/>
    <choice value="ot128_clipped"/>
    <choice value="qt128"/>
  </arg>

  <!-- LidarTag node -->
  <group>
    <push-ros-namespace namespace="lidartag" />
    <!-- valgrind /-/-tool=callgrind /-/-callgrind-out-file='callgrind.lidar_tag.%p'  -->
    <!--node pkg="lidartag" launch-prefix="xterm -e valgrind -tool=memcheck" exec="lidartag_main" name="lidartag_main" output="screen" -->
    <!--node pkg="lidartag" launch-prefix="valgrind -\-tool=memcheck -\-track-origins=yes -\-vgdb-error=0" exec="lidartag_main" name="lidartag_main" output="screen" -->
    <node pkg="lidartag" exec="lidartag_main" name="lidartag_main" output="screen" >
    
      <remap from="pointcloud_input" to="$(var pointcloud_topic)" />

      <param from="$(find-pkg-share lidartag)/config/base.param.yaml"/>
      <param from="$(find-pkg-share lidartag)/config/$(var lidar_model).param.yaml"/>

      <!-- Path for Analysis Files -->
      <param name="library_path" value="$(find-pkg-share lidartag)/lib/decoding_templates/"/>
      <param name="outputs_path" value="$(find-pkg-share lidartag)/outputs/"/>

      <param name="tag_size_list" value="$(var tag_size_list)"/>
    </node>

  </group>
</launch>
